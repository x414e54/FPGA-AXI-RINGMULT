library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity tb_mulmodfft is
    generic (	
	    C_PARAM_WIDTH                        : integer   := 64;
        C_PARAM_ADDR_WIDTH                   : integer   := 32;
        ---
        C_LENGTH_WIDTH                       : integer   := 16;	
		C_MAX_FFT_PRIME_WIDTH                : integer   := 256;
        C_MAX_FFT_LENGTH                     : integer   := 64; 
        C_MAX_POLY_LENGTH                    : integer   := 18; 
		---
		C_PARAM_ADDR_MUL_TABLE               : integer := 0;
        C_PARAM_ADDR_FFT_TABLE               : integer := 9;
        C_PARAM_ADDR_IFFT_TABLE              : integer := 18;
        C_PARAM_ADDR_BS_MUL_TABLE            : integer := 27;
        C_PARAM_ADDR_BS_MUL_FFT_TABLE        : integer := 36;
        C_PARAM_ADDR_IBS_MUL_TABLE           : integer := 45;
        C_PARAM_ADDR_IBS_MUL_FFT_TABLE       : integer := 54
        ---
    );
    --port ();
end tb_mulmodfft;

architecture behavior of tb_mulmodfft is
                        
    signal   stop               : std_logic := '0';
    constant clk_period         : time := 10ns;

    signal clk                  : std_logic := '0';

    -- mm
    signal mm_param           :  std_logic_vector(C_PARAM_WIDTH-1 downto 0) := (others => '0');
    signal mm_param_addr      :  std_logic_vector(C_PARAM_ADDR_WIDTH-1 downto 0) := (others => '0');
    signal mm_param_valid     :  std_logic := '0';
    signal mm_value           :  std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0) := (others => '0');
    signal mm_value_valid     :  std_logic := '0';
    signal mm_output          :  std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0) := (others => '0');
    signal mm_output_valid    :  std_logic := '0';
                            
    type mm_input_array is array(0 to C_MAX_POLY_LENGTH-1) of std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0);
    type mm_table is array(0 to C_MAX_POLY_LENGTH-1) of std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0);
    type fft_table is array(0 to C_MAX_FFT_LENGTH-1) of std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0);

    constant INPUT: mm_input_array := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant OUTPUT: mm_input_array := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    
    constant MUL_TABLE: mm_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant W_TABLE: fft_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant WI_TABLE: fft_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant BS_MUL_TABLE: mm_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant BS_MUL_FFT_TABLE: fft_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant IBS_MUL_TABLE: mm_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
    constant IBS_MUL_FFT_TABLE: fft_table := (x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040", x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040");
        
    constant PRIME: std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0)      := x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040";
    constant PRIME_RED: std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0)  := x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040FF2BF";
    constant PRIME_I: std_logic_vector(C_MAX_FFT_PRIME_WIDTH-1 downto 0)    := x"00000002c36e5d4e53f1650fd56d99480361ff7e07877040";
    constant PRIME_LEN : integer    := 256; 
                
    alias param_addr_top : std_logic_vector((C_PARAM_ADDR_WIDTH/2)-1 downto 0) is mm_param_addr(C_PARAM_ADDR_WIDTH-1 downto C_PARAM_ADDR_WIDTH/2);
    alias param_addr_bottom : std_logic_vector((C_PARAM_ADDR_WIDTH/2)-1 downto 0) is mm_param_addr((C_PARAM_ADDR_WIDTH/2)-1 downto 0);
        
begin

    mulmodfft_inst : entity work.mulmodfft
        generic map (
            C_PARAM_WIDTH                        => C_PARAM_WIDTH,
            C_PARAM_ADDR_WIDTH                   => C_PARAM_ADDR_WIDTH,
            ---
            C_LENGTH_WIDTH                       => C_LENGTH_WIDTH,	
            C_MAX_FFT_PRIME_WIDTH                => C_MAX_FFT_PRIME_WIDTH,
            C_MAX_FFT_LENGTH                     => C_MAX_FFT_LENGTH, 
            C_MAX_POLY_LENGTH                    => C_MAX_POLY_LENGTH,
            ---
            C_PARAM_ADDR_MUL_TABLE               => C_PARAM_ADDR_MUL_TABLE,
            C_PARAM_ADDR_FFT_TABLE               => C_PARAM_ADDR_FFT_TABLE,
            C_PARAM_ADDR_IFFT_TABLE              => C_PARAM_ADDR_IFFT_TABLE,
            C_PARAM_ADDR_BS_MUL_TABLE            => C_PARAM_ADDR_BS_MUL_TABLE,
            C_PARAM_ADDR_BS_MUL_FFT_TABLE        => C_PARAM_ADDR_BS_MUL_FFT_TABLE,
            C_PARAM_ADDR_IBS_MUL_TABLE           => C_PARAM_ADDR_IBS_MUL_TABLE,
            C_PARAM_ADDR_IBS_MUL_FFT_TABLE       => C_PARAM_ADDR_IBS_MUL_FFT_TABLE
            ---
        )
        port map (
            clk => clk,
                    
            -- Ports of fft
            param          => mm_param,
            param_addr     => mm_param_addr,
            param_valid    => mm_param_valid,
            value          => mm_value,
            value_valid    => mm_value_valid,
            output         => mm_output,
            output_valid   => mm_output_valid
        );  

    clk_process : process
    begin
        clk <= '0';
        wait for clk_period/2;
        clk <= '1';
        wait for clk_period/2;
        if stop = '1' then
            wait;
        end if;
    end process;
        
    stimulus : process
    begin
        wait until rising_edge(clk);
                    
        --bs_prime_len <= std_logic_vector(to_unsigned(PRIME_LEN, bs_prime_len'length));
        --bs_prime <= PRIME;
        --bs_prime_red <= PRIMES_RED;
        --bs_fft_length <= C_FFT_LENGTH;
        --bs_length <= C_BLUESTEIN_LENGTH;

        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_MUL_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_POLY_LENGTH - 1 loop
            mm_param <= MUL_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;

        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_BS_MUL_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_POLY_LENGTH - 1 loop
            mm_param <= BS_MUL_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;
                    
        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_BS_MUL_FFT_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_FFT_LENGTH - 1 loop
            mm_param <= BS_MUL_FFT_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;

        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_IBS_MUL_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_POLY_LENGTH - 1 loop
            mm_param <= IBS_MUL_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;
                    
        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_IBS_MUL_FFT_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_FFT_LENGTH - 1 loop
            mm_param <= IBS_MUL_FFT_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;

        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_FFT_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_FFT_LENGTH - 1 loop
            mm_param <= W_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;

        param_addr_top <= std_logic_vector(to_unsigned(C_PARAM_ADDR_IFFT_TABLE, (C_PARAM_ADDR_WIDTH/2)));
        param_addr_bottom <= x"0000";

        for j in 0 to C_MAX_FFT_LENGTH - 1 loop
            mm_param <= WI_TABLE(j);
            mm_param_valid <= '1';
            wait until rising_edge(clk);
            param_addr_bottom <= std_logic_vector(unsigned(param_addr_bottom) + 1);
        end loop;
        
        mm_param_valid <= '0';
        wait until rising_edge(clk);
               
        for i in 0 to C_MAX_POLY_LENGTH - 1 loop
            mm_value_valid <= '1';
        	mm_value <= INPUT(i);
        	wait until rising_edge(clk);
        end loop;
        
        mm_value_valid <= '0';
        
        wait until mm_output_valid = '1';
        
		for i in 0 to C_MAX_POLY_LENGTH - 1 loop
			assert mm_output = OUTPUT(i);
            wait until rising_edge(clk);
		end loop;

        stop <= '1';
        
        wait;
    end process;

end;